# models name: Student
# Fields: 
# id: Integer
# Name: String
# Age: Integer
# Gender: String


# API: GET, GET(by_ID),POST, POST(by_ID),PUT(by_ID), DELETE, DELETE(by_ID)
swagger: '2.0'
info:
  version: '1.0.0'
  title: Student API
  description: A simple Student model API
  termsOfService: http://www.domain.com
  contact:
    name: Amber
    email: amber@nickelfox.com
    url: http://techfaq.in
  license:
    name: MIT
    url: http://opensource.org/license/MIT
host: student.swagger.info
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json



paths:
  /student:
    get:
      description: Return all student fields
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: query
          description: maximum number of results to return
          required: true
          type: integer
          format: int32
          
        - name: name
          in: query
          description: tags to filter by
          required: true
          type: array
          items:
            type: string
         
        - name: age
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
        
        - name: gender
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
        
        
          
      responses:
        '200':
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/student'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'  
          
        
        
definitions:
  student:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      age:
        type: integer
        format: int64
      gender:
        type: string

  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  
 



